'''
Индикатор Аллигатор – осцилляторный индикатор технического анализа, созданный известным рыночным игроком Биллом Уильямсом.
Используется для поиска моментов перехода тренда к стабильному движению и, наоборот, сигнализирует об его прекращении.
График индикатора Аллигатор состоит из трех разноцветных линий, именуемых сглаженными скользящими средними (SMA) с разными периодами и сдвигом на графике. 
При этом во всех кривых используется средняя цена, а не цена закрытия. 
Рассчитывается она достаточно просто. Берется максимум и минимум за определенный период времени. 
Они складываются между собой и делятся на два.

Синяя кривая, которая называется «Челюстью», имеет расчетный период 21 при смещении вперед на 8 баров. 
Она демонстрирует возможное местонахождение цены при отсутствии фундаментальных экономических новостей. 
Если линия «Челюсти» располагается ниже относительно графика цены, значит, рынок находится в состоянии позитивного ожидания восходящего движения. 
Если выше – рынок настроен негативно, и велика вероятность роста тренда.

Красную кривую с расчетным периодом 11 при смещении вперед на 5 баров называют аллигаторовыми «Зубами». 
Она демонстрирует часовую тенденцию.

«Губы» зеленого цвета с периодом 8 при смещении вперед на 3 бара отображают 12-минутную тенденцию на дневных таймфреймах (временных промежутках).
'''

import numpy as np
from app.client.utils.helpers import create_df
from app.client.signals.sma_signal import sma, crossover, crossunder
import app.client.store.store as store

def calculate_alligator_strategy(data, jaw_period, jaw_shift, teeth_period, teeth_shift, lips_period, lips_shift, profit):
    """
    Функция для расчета стратегии Аллигатора (Alligator) Bill Williams.
    Она использует три скользящие средние: челюсти, зубы и губы, 
    которые демонстрируют возможное местонахождение цены при отсутствии фундаментальных новостей.

    :param data: исторические данные ( HistoricCandle ) для расчета стратегии
    :param jaw_period: период для расчета Челюстей
    :param jaw_shift: сдвиг Челюстей
    :param teeth_period: период для расчета Зубов
    :param teeth_shift: сдвиг Зубов
    :param lips_period: период для расчета Губ
    :param lips_shift: сдвиг Губ
    :param profit: прибыль для определения момента для продажи

    :return: 'buy', 'sell' или 'hold', в зависимости от стратегии
    """
    
    candles = data.candles
    df = create_df(candles)

    # Рассчитываем среднюю цену по каждому бару: (High + Low) / 2
    avg_prices = (df['high'].values + df['low'].values) / 2

    # Рассчитываем скользящие средние для челюстей, зубов и губ на основе средней цены
    jaw_sma = sma(avg_prices, jaw_period)
    teeth_sma = sma(avg_prices, teeth_period)
    lips_sma = sma(avg_prices, lips_period)

    # Применяем смещения: сдвигаем массивы на заданное количество баров
    jaw_sma = np.roll(jaw_sma, jaw_shift)
    teeth_sma = np.roll(teeth_sma, teeth_shift)
    lips_sma = np.roll(lips_sma, lips_shift)

    store.jaw_sma = jaw_sma
    store.teeth_sma = teeth_sma
    store.lips_sma = lips_sma

    # Проверяем пересечения с учетом положения линий
    # Покупка при пересечении губ с зубами и зубов с челюстями снизу вверх
    if crossover(lips_sma, teeth_sma) and crossover(teeth_sma, jaw_sma):
        return 'buy'

    # Продажа при пересечении губ с зубами и зубов с челюстями сверху вниз
    if crossunder(lips_sma, teeth_sma) and crossunder(teeth_sma, jaw_sma) and profit > 0:
        return 'sell'


    return 'hold'
