from app.client.api.config_client import ConfigApiClient
from app.client.api.instruments_client import InstrumentsApiClient
from app.client.bot.bot import bot
from telebot import types
from app.client.config.schedulers_config import configure_market_scheduler
from app.client.handlers.notifications.utils.utils import stop_scheduler, get_interval_from_callback
from app.client.handlers.utils.message_utils import send_or_edit_message
import requests

config_client = ConfigApiClient()
instruments_client = InstrumentsApiClient()


@bot.callback_query_handler(func=lambda call: call.data == 'user_add_market_updates')
def add_market_updates_handler(call):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä—ã–Ω–∫–∞.
    
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø–æ–¥–ø–∏—Å–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ, –∏ –µ—Å–ª–∏ –Ω–µ—Ç, –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª.
    """
    chat_id = call.message.chat.id
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        try:
            config = config_client.get_config()
            
            # –ï—Å–ª–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —É–∂–µ –≤–∫–ª—é—á–µ–Ω—ã
            if config and config.get('market_updates', False):
                send_or_edit_message(chat_id, 'üìä *–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è*\n\n–í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä—ã–Ω–∫–∞')
                return
            
            send_or_edit_message(chat_id, 'üîÑ *–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏*\n\n–í—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –±—É–¥–µ—Ç–µ –æ—Ç–ø–∏—Å–∞–Ω—ã –æ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –ø–∞–¥–µ–Ω–∏–π —Ä—ã–Ω–∫–∞')
        
        except requests.exceptions.HTTPError as e:
            if e.response.status_code == 404:
                # –ï—Å–ª–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é
                pass
            else:
                # –ï—Å–ª–∏ –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞, —Å–æ–æ–±—â–∞–µ–º –æ –Ω–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                send_or_edit_message(chat_id, f"‚ùå *–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏*\n\n`{str(e)}`")
                return
        except Exception as e:
            send_or_edit_message(chat_id, f"‚ùå *–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏*\n\n`{str(e)}`")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
        instruments = instruments_client.get_all_instruments()
        
        if not instruments:
            send_or_edit_message(chat_id, '‚ùå *–û—à–∏–±–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏*\n\n–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤')
        else:
            inline_keyboard = types.InlineKeyboardMarkup()
            buttons = [types.InlineKeyboardButton(text=t, callback_data=f'uinterval_{t}') for t in ['10 –º–∏–Ω—É—Ç', '–ø–æ–ª —á–∞—Å–∞', '—á–∞—Å']]
            
            for button in buttons:
                inline_keyboard.add(button)
            
            send_or_edit_message(
                chat_id, 
                '‚è±Ô∏è *–í—ã–±–æ—Ä –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Ä—ã–Ω–∫–∞:', 
                reply_markup=inline_keyboard
            )
    
    except Exception as e:
        send_or_edit_message(chat_id, f"‚ùå *–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–ø–∏—Å–∫–µ –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è*\n\n`{str(e)}`")


@bot.callback_query_handler(func=lambda call: call.data.startswith('uinterval_'))
def update_interval_handler(call):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Ä—ã–Ω–∫–∞.
    
    –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –∏ –≤–∫–ª—é—á–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.
    """
    chat_id = call.message.chat.id
    
    try:
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
        stop_scheduler()
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –∏–∑ callback-–¥–∞–Ω–Ω—ã—Ö
        time_value = get_interval_from_callback(call.data)
        
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤—Ä–µ–º—è –≤ —Å—Ç—Ä–æ–∫—É
        time_str = str(time_value)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
        try:
            config = config_client.get_config()
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
            config_client.update_config(
                "0",            # collapse_updates_time
                False,          # collapse_updates
                time_str,       # market_updates_time
                True            # market_updates
            )
        except requests.exceptions.HTTPError as e:
            if e.response.status_code == 404:
                # –ï—Å–ª–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é
                config_client.create_config(
                    "0",            # collapse_updates_time
                    False,          # collapse_updates
                    time_str,       # market_updates_time
                    True            # market_updates
                )
            else:
                # –ï—Å–ª–∏ –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞, –≤—ã–∑—ã–≤–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ
                raise
        
        send_or_edit_message(chat_id, '‚è≥ *–û–∂–∏–¥–∞–π—Ç–µ...*\n\n–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å–æ–∑–¥–∞—é—Ç—Å—è')
        configure_market_scheduler()
        
        send_or_edit_message(
            chat_id, 
            f'‚úÖ *–£—Å–ø–µ—à–Ω–æ*\n\n–í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä—ã–Ω–∫–∞ —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º {time_str}'
        )
    
    except Exception as e:
        send_or_edit_message(chat_id, f"‚ùå *–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞*\n\n`{str(e)}`")


@bot.callback_query_handler(func=lambda call: call.data == 'remove_market_updates')
def remove_market_updates_handler(call):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–ø–∏—Å–∫–∏ –æ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Ä—ã–Ω–∫–∞.
    
    –û—Ç–∫–ª—é—á–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫.
    """
    chat_id = call.message.chat.id
    
    try:
        # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ API-–∫–ª–∏–µ–Ω—Ç
        config_client.update_config(
            "0",            # collapse_updates_time
            False,          # collapse_updates
            "0",            # market_updates_time
            False           # market_updates
        )
        
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
        stop_scheduler()
        
        send_or_edit_message(chat_id, 'üîï *–û—Ç–ø–∏—Å–∫–∞ –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π*\n\n–í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Ä—ã–Ω–∫–∞')
    
    except Exception as e:
        send_or_edit_message(chat_id, f"‚ùå *–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø–∏—Å–∫–µ –æ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π*\n\n`{str(e)}`")
