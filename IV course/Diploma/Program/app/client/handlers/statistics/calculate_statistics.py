from datetime import datetime, timedelta
import pytz
from app.client.api.trading_client import TradingApiClient
from app.client.bot.bot import bot
from app.client.graphics.statistics_graph import statistics_graph
from app.client.handlers.utils.message_utils import send_or_edit_message

trading_client = TradingApiClient()

def filter_data_by_days(data, days):
    """
    –§–∏–ª—å—Ç—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª—É –≤—Ä–µ–º–µ–Ω–∏.
    
    Args:
        data: –°–ø–∏—Å–æ–∫ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
        days: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
        
    Returns:
        list: –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    """
    # –£—Å—Ç–∞–Ω–æ–≤–∏–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –ø–æ –º–æ—Å–∫–æ–≤—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏
    moscow_tz = pytz.timezone('Europe/Moscow')
    now = datetime.now(moscow_tz)
    
    # –ù–∞—á–∞–ª–æ —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –¥–Ω—è
    start_of_today = now.replace(hour=0, minute=0, second=0, microsecond=0)
    
    # –ï—Å–ª–∏ days = 1, –∏–Ω—Ç–µ—Ä–≤–∞–ª —Å –Ω–∞—á–∞–ª–∞ —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è –¥–æ —Ç–µ–∫—É—â–µ–≥–æ –º–æ–º–µ–Ω—Ç–∞
    if days == 1:
        start_time = start_of_today
    else:
        # –ï—Å–ª–∏ days > 1, –∏–Ω—Ç–µ—Ä–≤–∞–ª —Å –Ω–∞—á–∞–ª–∞ (days-1) –¥–Ω–µ–π –Ω–∞–∑–∞–¥ –¥–æ —Ç–µ–∫—É—â–µ–≥–æ –º–æ–º–µ–Ω—Ç–∞
        start_time = start_of_today - timedelta(days=days - 1)
    
    # –û—Ç—Ñ–∏–ª—å—Ç—Ä—É–µ–º –∑–∞–ø–∏—Å–∏, —É –∫–æ—Ç–æ—Ä—ã—Ö –≤—Ä–µ–º—è –ª–µ–∂–∏—Ç –º–µ–∂–¥—É start_time –∏ —Ç–µ–∫—É—â–∏–º –º–æ–º–µ–Ω—Ç–æ–º
    filtered_data = [
        row for row in data 
        if start_time <= datetime.strptime(row[-2], '%d-%m-%Y %H:%M').replace(tzinfo=moscow_tz) <= now
    ]
    
    return filtered_data


def calculate_statistics(days, chat_id):
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.
    
    –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–∫—É–ø–∫–∞—Ö –∏ –ø—Ä–∏–±—ã–ª–∏, —Ñ–∏–ª—å—Ç—Ä—É–µ—Ç –∏—Ö –ø–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª—É –≤—Ä–µ–º–µ–Ω–∏ –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≥—Ä–∞—Ñ–∏–∫.
    
    Args:
        days: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–ª–∏ 'full' –¥–ª—è –ø–æ–ª–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        chat_id: ID —á–∞—Ç–∞
    """
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        send_or_edit_message(chat_id, "‚è≥ *–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞*\n\n–†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–æ—Ä–≥–æ–≤–ª–∏...")
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–∫—É–ø–∫–∞—Ö –∏ –ø—Ä–∏–±—ã–ª–∏ —á–µ—Ä–µ–∑ API-–∫–ª–∏–µ–Ω—Ç
        buy = trading_client.get_buys()
        margin = trading_client.get_margins()
        
        if not buy and not margin:
            send_or_edit_message(chat_id, "‚ÑπÔ∏è *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è*\n\n–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.")
            return
        
        # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω –∏–Ω—Ç–µ—Ä–≤–∞–ª, —Ñ–∏–ª—å—Ç—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
        if days != 'full':
            days = int(days)  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º days –≤ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
            buy = filter_data_by_days(buy, days)
            margin = filter_data_by_days(margin, days)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Å—Ç–∞–ª–∏—Å—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
        if not buy and not margin:
            send_or_edit_message(chat_id, f"‚ÑπÔ∏è *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è*\n\n–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ `{days}` –¥–Ω–µ–π.")
            return
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–∏ –≥—Ä–∞—Ñ–∏–∫–∞
        send_or_edit_message(chat_id, "üìä *–ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞*\n\n–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤–∏–∑—É–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...")
        
        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –≥—Ä–∞—Ñ–∏–∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        statistics_graph(buy, margin, chat_id)
    
    except Exception as e:
        send_or_edit_message(chat_id, f"‚ùå *–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏*\n\n`{str(e)}`")
