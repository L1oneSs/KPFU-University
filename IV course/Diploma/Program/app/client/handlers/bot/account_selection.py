from telebot import types
from app.client.api.config_client import ConfigApiClient
from app.client.bot.bot import bot
from tinkoff.invest import Client
from tinkoff.invest.services import SandboxService
from dotenv import load_dotenv
import os
from app.client.handlers.utils.message_utils import send_or_edit_message

config_client = ConfigApiClient()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
def get_tokens():
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Ç–æ–∫–µ–Ω—ã –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è.
    
    Returns:
        dict: –°–ª–æ–≤–∞—Ä—å —Å —Ç–æ–∫–µ–Ω–∞–º–∏
    """
    load_dotenv()
    return {
        "token": os.getenv('TOKEN'),
        "sandbox_token": os.getenv('SANDBOX_TOKEN')
    }


@bot.callback_query_handler(func=lambda call: call.data == 'account_selection')
def get_account_handler(call):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ —Å—á–µ—Ç–∞.
    
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –º–µ–Ω—é —Å –≤—ã–±–æ—Ä–æ–º –º–µ–∂–¥—É –±–æ–µ–≤—ã–º —Å—á–µ—Ç–æ–º –∏ –ø–µ—Å–æ—á–Ω–∏—Ü–µ–π.
    """
    chat_id = call.message.chat.id
    
    inline_keyboard = types.InlineKeyboardMarkup()
    buttons = [
        types.InlineKeyboardButton(text='üíπ –ë–æ–µ–≤–æ–π —Å—á–µ—Ç', callback_data='real_account'),
        types.InlineKeyboardButton(text='üèùÔ∏è –ü–µ—Å–æ—á–Ω–∏—Ü–∞', callback_data='sandbox_account'),
    ]
    
    for button in buttons:
        inline_keyboard.add(button)
    
    send_or_edit_message(
        chat_id, 
        'üíº *–í—ã–±–æ—Ä —Å—á–µ—Ç–∞*\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Å—á–µ—Ç–∞ –¥–ª—è —Ç–æ—Ä–≥–æ–≤–ª–∏:', 
        reply_markup=inline_keyboard
    )


@bot.callback_query_handler(func=lambda call: call.data == 'real_account')
def real_account(call):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ –±–æ–µ–≤–æ–≥–æ —Å—á–µ—Ç–∞.
    
    –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–ª–∞–≥ sandbox_trigger –≤ False.
    """
    chat_id = call.message.chat.id
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        send_or_edit_message(chat_id, "‚è≥ *–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞*\n\n–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –±–æ–µ–≤–æ–π —Å—á–µ—Ç...")
        
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º API-–∫–ª–∏–µ–Ω—Ç –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ñ–ª–∞–≥–∞ sandbox_trigger
            config_client.set_sandbox_trigger(False)
            send_or_edit_message(chat_id, "‚úÖ *–£—Å–ø–µ—à–Ω–æ*\n\n–í—ã –≤—ã–±—Ä–∞–ª–∏ –±–æ–µ–≤–æ–π —Å—á–µ—Ç")
        except Exception as e:
            if hasattr(e, 'response') and e.response.status_code == 404:
                send_or_edit_message(chat_id, "‚ùå *–û—à–∏–±–∫–∞*\n\n–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –°–Ω–∞—á–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é.")
            else:
                raise
    
    except Exception as e:
        send_or_edit_message(chat_id, f"‚ùå *–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –±–æ–µ–≤–æ–≥–æ —Å—á–µ—Ç–∞*\n\n`{str(e)}`")


@bot.callback_query_handler(func=lambda call: call.data == 'sandbox_account')
def sandbox_account(call):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–µ—Å–æ—á–Ω–∏—Ü—ã.
    
    –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–ª–∞–≥ sandbox_trigger –≤ True –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç/—Å–æ–∑–¥–∞–µ—Ç —Å—á–µ—Ç –≤ –ø–µ—Å–æ—á–Ω–∏—Ü–µ.
    """
    chat_id = call.message.chat.id
    tokens = get_tokens()
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        send_or_edit_message(chat_id, "‚è≥ *–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞*\n\n–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–µ–∂–∏–º –ø–µ—Å–æ—á–Ω–∏—Ü—ã...")
        
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º API-–∫–ª–∏–µ–Ω—Ç –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ñ–ª–∞–≥–∞ sandbox_trigger
            config_client.set_sandbox_trigger(True)
        except Exception as e:
            if hasattr(e, 'response') and e.response.status_code == 404:
                send_or_edit_message(chat_id, "‚ùå *–û—à–∏–±–∫–∞*\n\n–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –°–Ω–∞—á–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é.")
                return
            else:
                raise

        # –†–∞–±–æ—Ç–∞ —Å –ø–µ—Å–æ—á–Ω–∏—Ü–µ–π Tinkoff API
        with Client(tokens["sandbox_token"]) as client:
            sb: SandboxService = client.sandbox

            r = sb.get_sandbox_accounts().accounts

            if len(r) > 0:
                send_or_edit_message(chat_id, "‚úÖ *–£—Å–ø–µ—à–Ω–æ*\n\n–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä–µ–∂–∏–º –ø–µ—Å–æ—á–Ω–∏—Ü—ã")
            else:
                sb.open_sandbox_account()
                send_or_edit_message(chat_id, "‚úÖ *–£—Å–ø–µ—à–Ω–æ*\n\n–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π —Å—á–µ—Ç –≤ –ø–µ—Å–æ—á–Ω–∏—Ü–µ. –í—ã–±—Ä–∞–Ω —Ä–µ–∂–∏–º –ø–µ—Å–æ—á–Ω–∏—Ü—ã.")
    
    except Exception as e:
        send_or_edit_message(chat_id, f"‚ùå *–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –ø–µ—Å–æ—á–Ω–∏—Ü—ã*\n\n`{str(e)}`")
