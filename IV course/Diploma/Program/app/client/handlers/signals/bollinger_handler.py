from telebot import types
from app.client.api.signals_client import SignalsApiClient
from app.client.bot.bot import bot
from app.client.handlers.utils.message_utils import send_or_edit_message

signals_client = SignalsApiClient()


# –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_bollinger_data = {}


@bot.callback_query_handler(func=lambda call: call.data == 'signal_bollinger')
def bollinger_handler(call):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏–≥–Ω–∞–ª–∞ Bollinger Bands.
    
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–∏–≥–Ω–∞–ª–∞ Bollinger Bands.
    """
    chat_id = call.message.chat.id
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Bollinger
    current_settings = signals_client.get_signal_bollinger()
    
    if current_settings:
        period = current_settings.get('period', 20)
        deviation = current_settings.get('deviation', 2)
        type_ma = current_settings.get('type_ma', 'sma')
        
        send_or_edit_message(
            chat_id, 
            f'üìä *–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Bollinger Bands*\n\n'
            f'‚Ä¢ –ü–µ—Ä–∏–æ–¥: `{period}`\n'
            f'‚Ä¢ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è: `{deviation}`\n'
            f'‚Ä¢ –¢–∏–ø —Å–∫–æ–ª—å–∑—è—â–µ–π —Å—Ä–µ–¥–Ω–µ–π: `{type_ma.upper()}`'
        )
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–µ—Ä–∏–æ–¥
    msg = send_or_edit_message(chat_id, "üìä *–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Bollinger Bands*\n\n–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å–∫–æ–ª—å–∑—è—â–µ–π —Å—Ä–µ–¥–Ω–µ–π:")
    bot.register_next_step_handler(msg, get_bollinger_period)


def validate_number(value, min_value=None, max_value=None):
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ —è–≤–ª—è–µ—Ç—Å—è —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º —Å –≤–æ–∑–º–æ–∂–Ω–æ–π –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–∞ –¥–∏–∞–ø–∞–∑–æ–Ω.
    
    Args:
        value: –ü—Ä–æ–≤–µ—Ä—è–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        min_value: –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        max_value: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        
    Returns:
        bool: True, –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –≤–∞–ª–∏–¥–Ω–æ, –∏–Ω–∞—á–µ False
    """
    try:
        num = int(value)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–∏–∞–ø–∞–∑–æ–Ω
        if min_value is not None and num < min_value:
            return False
        if max_value is not None and num > max_value:
            return False
        
        return True
    except ValueError:
        return False


def get_bollinger_period(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–∏–æ–¥–∞ Bollinger Bands.
    
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–µ—Ä–∏–æ–¥ –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–π.
    """
    chat_id = message.chat.id
    period = message.text
    
    if not validate_number(period, min_value=1, max_value=100):
        msg = send_or_edit_message(chat_id, "‚ùå *–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞*\n\n–ü–µ—Ä–∏–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º –æ—Ç 1 –¥–æ 100. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:")
        bot.register_next_step_handler(msg, get_bollinger_period)
        return
    
    period = int(period)
    user_bollinger_data[chat_id] = {'period': period}  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–µ—Ä–∏–æ–¥
    msg = send_or_edit_message(chat_id, f"‚úÖ –í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–µ—Ä–∏–æ–¥ `{period}`.\n\n*–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–π:*")
    bot.register_next_step_handler(msg, get_bollinger_stddev)


def get_bollinger_stddev(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–π Bollinger Bands.
    
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–π –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Ç–∏–ø —Å–∫–æ–ª—å–∑—è—â–µ–π —Å—Ä–µ–¥–Ω–µ–π.
    """
    chat_id = message.chat.id
    stddev = message.text
    
    try:
        stddev = float(stddev)
        if stddev <= 0:
            raise ValueError("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º")
        
        user_bollinger_data[chat_id]['stddev'] = stddev  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–π
        msg = send_or_edit_message(chat_id, f"‚úÖ –í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–π `{stddev}`.\n\n*–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Å–∫–æ–ª—å–∑—è—â–µ–π —Å—Ä–µ–¥–Ω–µ–π (SMA –∏–ª–∏ EMA):*")
        bot.register_next_step_handler(msg, get_bollinger_ma_type)
    
    except ValueError as e:
        msg = send_or_edit_message(chat_id, f"‚ùå *–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞*\n\n{str(e)}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:")
        bot.register_next_step_handler(msg, get_bollinger_stddev)


def get_bollinger_ma_type(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–∏–ø–∞ —Å–∫–æ–ª—å–∑—è—â–µ–π —Å—Ä–µ–¥–Ω–µ–π Bollinger Bands.
    
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–∏–ø —Å–∫–æ–ª—å–∑—è—â–µ–π —Å—Ä–µ–¥–Ω–µ–π –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏–≥–Ω–∞–ª–∞ Bollinger Bands.
    """
    chat_id = message.chat.id
    ma_type = message.text.strip().upper()
    
    if ma_type not in ['SMA', 'EMA']:
        msg = send_or_edit_message(chat_id, "‚ùå *–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞*\n\n–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –í–≤–µ–¥–∏—Ç–µ 'SMA' –∏–ª–∏ 'EMA' –¥–ª—è —Ç–∏–ø–∞ —Å–∫–æ–ª—å–∑—è—â–µ–π —Å—Ä–µ–¥–Ω–µ–π:")
        bot.register_next_step_handler(msg, get_bollinger_ma_type)
        return
    
    user_bollinger_data[chat_id]['ma_type'] = ma_type.lower()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–∏–ø —Å–∫–æ–ª—å–∑—è—â–µ–π —Å—Ä–µ–¥–Ω–µ–π
    period = user_bollinger_data[chat_id]['period']
    stddev = user_bollinger_data[chat_id]['stddev']
    ma_type = user_bollinger_data[chat_id]['ma_type']
    
    try:
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —á–µ—Ä–µ–∑ API-–∫–ª–∏–µ–Ω—Ç
        result = signals_client.update_signal_bollinger(period, stddev, ma_type)
        
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
        send_or_edit_message(
            chat_id, 
            f"‚úÖ *–°—Ç—Ä–∞—Ç–µ–≥–∏—è –ø–æ–ª–æ—Å –ë–æ–ª–ª–∏–Ω–¥–∂–µ—Ä–∞ —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞*\n\n"
            f"‚Ä¢ –ü–µ—Ä–∏–æ–¥: `{period}`\n"
            f"‚Ä¢ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è: `{stddev}`\n"
            f"‚Ä¢ –¢–∏–ø —Å–∫–æ–ª—å–∑—è—â–µ–π —Å—Ä–µ–¥–Ω–µ–π: `{ma_type.upper()}`"
        )
    
    except Exception as e:
        send_or_edit_message(chat_id, f"‚ùå *–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫*\n\n`{str(e)}`")
    
    # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    del user_bollinger_data[chat_id]
