from telebot import types
from app.client.api.signals_client import SignalsApiClient
from app.client.bot.bot import bot
from app.client.handlers.utils.message_utils import send_or_edit_message

signals_client = SignalsApiClient()

# –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_sma_data = {}

@bot.callback_query_handler(func=lambda call: call.data == 'signal_sma')
def sma_handler(call):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏–≥–Ω–∞–ª–∞ SMA.
    
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–∏–≥–Ω–∞–ª–∞ SMA.
    """
    chat_id = call.message.chat.id
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SMA
    current_settings = signals_client.get_signal_sma()
    
    if current_settings:
        fast_length = current_settings.get('fastLength', 10)
        slow_length = current_settings.get('slowLength', 30)
        
        send_or_edit_message(
            chat_id, 
            f'üìà *–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SMA*\n\n'
            f'‚Ä¢ –ë—ã—Å—Ç—Ä–∞—è SMA (Fast): `{fast_length}`\n'
            f'‚Ä¢ –ú–µ–¥–ª–µ–Ω–Ω–∞—è SMA (Slow): `{slow_length}`'
        )
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –±—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–∏–æ–¥
    msg = send_or_edit_message(chat_id, 'üìà *–ù–∞—Å—Ç—Ä–æ–π–∫–∞ SMA*\n\n–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π SMA (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è 10):')
    bot.register_next_step_handler(msg, get_fast_sma)


def validate_number(value):
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ —è–≤–ª—è–µ—Ç—Å—è —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º –æ—Ç 1 –¥–æ 200.
    
    Args:
        value: –ü—Ä–æ–≤–µ—Ä—è–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        
    Returns:
        bool: True, –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –≤–∞–ª–∏–¥–Ω–æ, –∏–Ω–∞—á–µ False
    """
    try:
        num = int(value)
        if num < 1 or num > 200:
            return False
        return True
    except ValueError:
        return False


def get_fast_sma(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–∏–æ–¥–∞ –±—ã—Å—Ç—Ä–æ–π SMA.
    
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–µ—Ä–∏–æ–¥ –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø–µ—Ä–∏–æ–¥ –º–µ–¥–ª–µ–Ω–Ω–æ–π SMA.
    """
    chat_id = message.chat.id
    fast_length = message.text
    
    if not validate_number(fast_length):
        msg = send_or_edit_message(chat_id, "‚ùå *–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞*\n\n–ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º, –±–æ–ª—å—à–µ 0 –∏ –º–µ–Ω—å—à–µ 200. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:")
        bot.register_next_step_handler(msg, get_fast_sma)
        return
    
    fast_length = int(fast_length)
    user_sma_data[chat_id] = {'fast_length': fast_length}
    msg = send_or_edit_message(chat_id, f"‚úÖ –í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–µ—Ä–∏–æ–¥ –±—ã—Å—Ç—Ä–æ–π SMA: `{fast_length}`\n\n*–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –¥–ª—è –º–µ–¥–ª–µ–Ω–Ω–æ–π SMA:*")
    bot.register_next_step_handler(msg, get_slow_sma)


def get_slow_sma(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–∏–æ–¥–∞ –º–µ–¥–ª–µ–Ω–Ω–æ–π SMA.
    
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–µ—Ä–∏–æ–¥ –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏–≥–Ω–∞–ª–∞ SMA.
    """
    chat_id = message.chat.id
    slow_length = message.text
    
    if not validate_number(slow_length):
        msg = send_or_edit_message(chat_id, "‚ùå *–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞*\n\n–ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º, –±–æ–ª—å—à–µ 0 –∏ –º–µ–Ω—å—à–µ 200. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:")
        bot.register_next_step_handler(msg, get_slow_sma)
        return
    
    slow_length = int(slow_length)
    fast_length = user_sma_data[chat_id]['fast_length']
    
    if slow_length <= fast_length:
        msg = send_or_edit_message(chat_id, "‚ùå *–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞*\n\n–ü–µ—Ä–∏–æ–¥ –º–µ–¥–ª–µ–Ω–Ω–æ–π SMA –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ –ø–µ—Ä–∏–æ–¥–∞ –±—ã—Å—Ç—Ä–æ–π SMA. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:")
        bot.register_next_step_handler(msg, get_slow_sma)
        return
    
    try:
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —á–µ—Ä–µ–∑ API-–∫–ª–∏–µ–Ω—Ç
        result = signals_client.update_signal_sma(fast_length, slow_length)
        
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
        send_or_edit_message(
            chat_id, 
            f"‚úÖ *–°—Ç—Ä–∞—Ç–µ–≥–∏—è SMA —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞*\n\n"
            f"‚Ä¢ –ë—ã—Å—Ç—Ä–∞—è SMA (Fast): `{fast_length}`\n"
            f"‚Ä¢ –ú–µ–¥–ª–µ–Ω–Ω–∞—è SMA (Slow): `{slow_length}`"
        )
    
    except Exception as e:
        send_or_edit_message(chat_id, f"‚ùå *–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ SMA*\n\n`{str(e)}`")
    
    # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    del user_sma_data[chat_id]
